import puppeteer from "puppeteer";

export async function htmlToPdfBuffer(
  html: string,
  opts?: {
    landscape?: boolean;
    format?: "A4" | "A3" | "Letter";
    headerHtml?: string;
    footerHtml?: string;
    margins?: { top?: string; bottom?: string; left?: string; right?: string };
  }
) {
  const browser = await puppeteer.launch({
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
  });
  try {
    const page = await browser.newPage();
    await page.setContent(html, { waitUntil: "networkidle0" });

    const pdf = await page.pdf({
      format: opts?.format ?? "A4",
      landscape: !!opts?.landscape,
      printBackground: true,
      displayHeaderFooter: !!(opts?.headerHtml || opts?.footerHtml),
      headerTemplate: opts?.headerHtml ?? "<span></span>",
      footerTemplate:
        opts?.footerHtml ??
        `<div style="font-size:10px;width:100%;padding:0 24px;display:flex;justify-content:space-between;">
           <span>Generated by Booking System</span>
           <span class="pageNumber"></span>/<span class="totalPages"></span>
         </div>`,
      margin: {
        top: opts?.margins?.top ?? "80px",
        bottom: opts?.margins?.bottom ?? "60px",
        left: opts?.margins?.left ?? "20px",
        right: opts?.margins?.right ?? "20px",
      },
    });
    return pdf;
  } finally {
    await browser.close();
  }
}
